# Task ID: 1
# Title: Setup Next.js Project with Tailwind and shadcn/ui
# Status: pending
# Dependencies: None
# Priority: high
# Description: Initialize the Next.js project with TypeScript, Tailwind CSS, and shadcn/ui components. Configure the basic project structure and install necessary dependencies.
# Details:
1. Use `create-next-app` with the TypeScript template.
2. Install Tailwind CSS and configure it according to the documentation.
3. Install shadcn/ui and initialize it within the project.
4. Set up basic folder structure (components, pages, styles, utils).
5. Configure ESLint and Prettier for code linting and formatting.

# Test Strategy:
Verify that the project builds successfully without errors. Check that Tailwind CSS styles are applied correctly. Ensure that shadcn/ui components can be imported and used.

# Subtasks:
## 1. Initialize Next.js project with TypeScript [pending]
### Dependencies: None
### Description: Create a new Next.js app (App Router) with TypeScript and required baseline settings. Verify dev server runs.
### Details:
- npx create-next-app@latest my-app --ts --eslint --app --src-dir --no-tailwind --import-alias "@/*"
- Confirm dev server with: npm run dev
- Ensure repo root and working directory are aligned with Taskmaster project.

## 2. Configure Tailwind CSS [pending]
### Dependencies: None
### Description: Install and configure Tailwind CSS with PostCSS for Next.js.
### Details:
- npm install -D tailwindcss postcss autoprefixer
- npx tailwindcss init -p
- Update tailwind.config.js content paths to include app, components, and src
- Add Tailwind directives to globals.css

## 3. Install shadcn/ui and base components [pending]
### Dependencies: None
### Description: Set up shadcn/ui CLI, configure components.json, and install core components.
### Details:
- npx shadcn@latest init
- Configure `components.json` as needed (tailwind config path, alias)
- Install base components: button, input, card, dialog, dropdown-menu, form

## 4. Create base folder structure [pending]
### Dependencies: None
### Description: Organize project directories for features, shared UI, lib, and config.
### Details:
- Create `app/(marketing)` and `app/(dashboard)` groups
- Create `components/ui` and `components/shared`
- Create `lib` for utilities and `types` for shared TypeScript types
- Set up `env` handling with next-safe-env or zod

## 5. Configure linting and formatting [pending]
### Dependencies: None
### Description: Set up ESLint, Prettier, and import sorting compatible with Next.js and Tailwind.
### Details:
- Ensure ESLint Next.js config and TypeScript support
- Add Prettier with tailwind plugin and config
- Add import/order and simple-import-sort
- Add format and lint npm scripts, run and fix issues

