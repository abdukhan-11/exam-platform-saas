i wanted to build a project by cursor using task-master so i first get ready the prd, past this prd in a file than tell task-master to pars this prd. task-master pars the prd and make 10 tasks with alot of subtasks for cursor. cursor have done 4 tasks and has built till superadmin panel but i want some changes to like just take my idea how i want the super-admin, teacher/admin, and student panel else all the idea same to rest and any changes also to make in work which has been done like database schema


look the superadmin panel has been build which has nothing to be access by other people so our main project is now going to develop, you first listen how i want the three panel. i want a college to be first register so their should be a page in landing home page of our web which shows sign-up and when it get register like specific (username) so their should be a page in landing home page of our web which shows get started and from there one can sign in like there will just ask for "college username" if a college not register mean incorrect username there a bottom also link sign-up page. and when one enter thier college user name it means he enter to the specific college databas than their should apear two buttons login as a admin/teacher and login as student. login as admin after auth will get their teacher-admin dashboard, the admin/teacher dashboard will have to look like this; their will be categories like classes (class 1st, class2nd) and each class category will contain its student data like students record, their tests/exam according to subjects, also record of student regarding specific subject like (physics, math, urdu), awardlists(all student exam data marks list) and upcoming events/exam. in tacher/admin panel teacher can manage each and everything like making test/exam for specific class of students, add or remove student, update subject (marks, exam list, upcoming events, awardlist and all other about college the teacher will create student by student id (or roll no) which take them their names, and password which specific student will use to login as student also the teacher can see the students as he created in specific class like class1st and can update their record which will show them in their student dashboard. whereas the login as student will ask for "student id(or roll no)" and password which was generated by teacher/admin and they will and student dashboard will contain his records according to subject, awardlist,subject special catagories (physics, math, urdu) upcoming events(e.g: tests/exam, assignment) and when there is test the test will have specific time and the marks should me added to their record, also the student can see all marks in his subject(physic, math, urdu) if they give sub specific test/exame. also student can edit their data of acc like name, father-name and profile pic and change password.

Database Structure:
🗄️ Database Per College
├── college_abc_db
│   ├── users (teachers, students)
│   ├── classes (class1, class2, class3...)
│   ├── subjects (physics, math, urdu)
│   ├── exams/tests
│   ├── student_records
│   └── marks/grades
│
├── college_xyz_db
│   ├── users (completely separate)
│   ├── classes (their own structure)
│   └── ... (isolated data)
│
└── main_system_db
    ├── colleges (college usernames, configs)
    └── super_admin_data

Step 1: College Selection & Database Routing
User enters "college_username" 
→ System identifies college database
→ Routes all subsequent operations to college_abc_db
→ Complete session isolation

Step 2: Role-Based Access Within College Database
college_abc_db:
├── Admin/Teacher (Full access to their college data)
├── Students (Only their own records + class info)
└── Complete isolation from college_xyz_db

Step 3: Class-Based Organization Within College
Each College Database Contains:
├── Classes (1st, 2nd, 3rd...)
│   ├── Students enrolled in each class
│   ├── Subjects taught in each class
│   ├── Exams/Tests per class
│   └── Performance records



so your job now: (get help from task-master where needed)
1) read the ./taskmaster/docs/prd.txt file complete and you have to update and rewrite the prd (./taskmaster/docs/prd.txt) which iclude this idea better with all the rest.
2) use task-master to pars it and update all the tasks.jason file (./taskmaster/tasks/tasks.jason) for you.
3) update the current code (if not needed delet it)  and all the database schema each and everything (if not needed delet it) ready for implementing new the task 1.
